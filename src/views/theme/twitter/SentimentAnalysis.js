import React, { useEffect, useState, createRef } from 'react'
import PropTypes from 'prop-types'
import classNames from 'classnames'
import { CRow, CCol, CCard, CCardHeader, CCardBody, CImage } from '@coreui/react'
import { rgbToHex } from '@coreui/utils'
import { DocsLink } from 'src/components'

import DistributionOfClusteredTweets from '../../../assets/images/Plots/DistributionOfClusteredTweets.jpg'
import SentimentDistribution from '../../../assets/images/Plots/SentimentDistribution.jpg'
import SentimentCategoryDistribution from '../../../assets/images/Plots/SentimentCategoryDistribution.jpg'

import MostUsedHashtagsClusteredToRealAndBot from 'src/components/MostUsedHashtagsClusteredToRealAndBot'


const ThemeView = () => {
  const [color, setColor] = useState('rgb(255, 255, 255)')
  const ref = createRef()

  useEffect(() => {
    const el = ref.current.parentNode.firstChild
    const varColor = window.getComputedStyle(el).getPropertyValue('background-color')
    setColor(varColor)
  }, [ref])

  return (
    <table className="table w-100" ref={ref}>
      <tbody>
        <tr>
          <td className="text-body-secondary">HEX:</td>
          <td className="font-weight-bold">{rgbToHex(color)}</td>
        </tr>
        <tr>
          <td className="text-body-secondary">RGB:</td>
          <td className="font-weight-bold">{color}</td>
        </tr>
      </tbody>
    </table>
  )
}

const ThemeColor = ({ className, children }) => {
  const classes = classNames(className, 'theme-color w-75 rounded mb-3')
  return (
    <CCol xs={12} sm={6} md={4} xl={2} className="mb-4">
      <div className={classes} style={{ paddingTop: '75%' }}></div>
      {children}
      <ThemeView />
    </CCol>
  )
}

ThemeColor.propTypes = {
  children: PropTypes.node,
  className: PropTypes.string,
}

const SentimentAnalysis = () => {
  return (
    <>
      <CRow>
        <CCol sm={6}>
          <h3>Overview of Twitter Scraped Data</h3>
          <h6>
            Using a combination of Selenium and Python with the Chrome Driver, we conducted web scraping to retrieve the latest 50 tweets from each Twitter account (denoted as X). To enhance the analysis, we initially vectorized the tweets, assigning a score to each. Subsequently, we employed the Latent Dirichlet Allocation (LDA) algorithm to categorize the tweets into two clusters: Bot-generated or Human-generated. To ensure optimal data preparation, we utilized the NLTK library for comprehensive pre-processing of the tweets. Throughout this process, several observations and assumptions emerged. 
          </h6>
        </CCol>
        <CCol sm={6}>
          <img style={{marginLeft:'24px'}} src={DistributionOfClusteredTweets} width={'550px'}/>
        </CCol>
      </CRow>
      <br/>
      <hr/>
      <br/>
      <CRow>
        <CCol sm={12}>
          <h3>sentiment Analysis of Tweets</h3>
          <h6>
            First, we noticed tweets with a different tone and style, which we thought might be generated by bots or fake accounts. Then, we assigned each topic a value, 0 or 1. 0 represents normal texts written by humans, and 1 represents texts likely posted by fake accounts.
            Technically speaking, we used TextBlob library in Python with its "Sentiment Polarity" functionality to analyze how the tweets sound.
          </h6>
        </CCol>
        <CRow>
          <CCol sm={7}> 
            <img style={{marginTop:'16px'}} src={SentimentDistribution} width={'700px'}/>
          </CCol>
          <CCol sm={5}> 
            <img style={{marginTop:'16px'}} src={SentimentCategoryDistribution} width={'600px'}/>
          </CCol>
        </CRow>
        <CRow>
          <CCol style={{marginTop:'24px'}}>
            <h6>There are some interesting notes and assumptions: 
              <li>First, the majority of tweets had a neutral tone, indicated by a sentiment value of 0.</li>
              <li>Second, for the remaining tweets, the overall sentiment trend was positive which indicates that the text expresses favorable or optimistic feelings. Probably because the purpose of the post was advertising China and making this assumption that everything is perfect about China and none of the rumors are true. </li>
            </h6>
          </CCol>
        </CRow>
      </CRow>
      
    </>
  )
}

export default SentimentAnalysis
